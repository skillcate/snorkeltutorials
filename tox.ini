[tox]
skipsdist = true
envlist =
    getting_started,
    spouse,
    visual_relation,
    spam,
    crowdsourcing,
    multitask,
    drybell,
    recsys,
    style,

[testenv]
description = test/sync for {envname}
deps =
    -r {toxinidir}/requirements.txt
passenv =
    JAVA_HOME
    IS_TEST
commands_pre = 
    drybell: python -m spacy download en_core_web_sm
# Available posargs: test, sync, html
commands =
    getting_started: python {toxinidir}/scripts/build.py {posargs:test} getting_started
    spouse: python {toxinidir}/scripts/build.py {posargs:test} spouse
    spam: python {toxinidir}/scripts/build.py {posargs:test} spam
    multitask: python {toxinidir}/scripts/build.py {posargs:test} multitask
    visual_relation: python {toxinidir}/scripts/build.py {posargs:test} visual_relation
    crowdsourcing: python {toxinidir}/scripts/build.py {posargs:test} crowdsourcing
    recsys: python {toxinidir}/scripts/build.py {posargs:test} recsys
    drybell: python {toxinidir}/scripts/build.py {posargs:test} drybell

[testenv:style]
description = check the code style
commands =
    black --check {toxinidir}
    flake8 {toxinidir}

[testenv:fix]
description = run code stylers
commands = black {toxinidir}

[testenv:markdown]
description = generate markdown webpages
commands = python {toxinidir}/scripts/build.py markdown {posargs}
